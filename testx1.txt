in generator: build_tree(): at depth: 0 / 1
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3422
in pawn set moves black
entering case (2)
in x<6 and y == 0
empty square for a move x+1 ahead.
pawn move +1 in x direction added.
empty square for a move x+2 ahead.
pawn move +2 in x direction added.
pawn checking for enemies to attack on: x,y == 2,1
enemy square s1 has piece with code: 3
leaving case (1)
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (1,0)
------>iter 0: move has x_end, y_end = (2,0)
------>iter 0: Piece to move is of code: 3422
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (1,0)
------>iter 1: move has x_end, y_end = (3,0)
------>iter 1: Piece to move is of code: 3422
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,0)
------>iter 0: move has x_end, y_end = (5,0)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,0)
------>iter 1: move has x_end, y_end = (4,0)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,1)
------>iter 0: move has x_end, y_end = (5,1)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,1)
------>iter 1: move has x_end, y_end = (4,1)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,2)
------>iter 0: move has x_end, y_end = (5,2)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,2)
------>iter 1: move has x_end, y_end = (4,2)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,3)
------>iter 0: move has x_end, y_end = (5,3)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,3)
------>iter 1: move has x_end, y_end = (4,3)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,4)
------>iter 0: move has x_end, y_end = (5,4)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,4)
------>iter 1: move has x_end, y_end = (4,4)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,5)
------>iter 0: move has x_end, y_end = (5,5)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,5)
------>iter 1: move has x_end, y_end = (4,5)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,6)
------>iter 0: move has x_end, y_end = (5,6)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,6)
------>iter 1: move has x_end, y_end = (4,6)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,7)
------>iter 0: move has x_end, y_end = (5,7)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,7)
------>iter 1: move has x_end, y_end = (4,7)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,0)
------>iter 0: move has x_end, y_end = (5,0)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,0)
------>iter 1: move has x_end, y_end = (4,0)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,1)
------>iter 0: move has x_end, y_end = (5,1)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,1)
------>iter 1: move has x_end, y_end = (4,1)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,2)
------>iter 0: move has x_end, y_end = (5,2)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,2)
------>iter 1: move has x_end, y_end = (4,2)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,3)
------>iter 0: move has x_end, y_end = (5,3)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,3)
------>iter 1: move has x_end, y_end = (4,3)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,4)
------>iter 0: move has x_end, y_end = (5,4)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,4)
------>iter 1: move has x_end, y_end = (4,4)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,5)
------>iter 0: move has x_end, y_end = (5,5)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,5)
------>iter 1: move has x_end, y_end = (4,5)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,6)
------>iter 0: move has x_end, y_end = (5,6)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,6)
------>iter 1: move has x_end, y_end = (4,6)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,7)
------>iter 0: move has x_end, y_end = (5,7)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,7)
------>iter 1: move has x_end, y_end = (4,7)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3422
in pawn set moves black
in x < 6 and y > 0 && y < 7
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (1,1)
------>iter 0: move has x_end, y_end = (2,1)
------>iter 0: Piece to move is of code: 3422
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (1,1)
------>iter 1: move has x_end, y_end = (3,1)
------>iter 1: Piece to move is of code: 3422
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,0)
------>iter 0: move has x_end, y_end = (5,0)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,0)
------>iter 1: move has x_end, y_end = (4,0)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,1)
------>iter 0: move has x_end, y_end = (5,1)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,1)
------>iter 1: move has x_end, y_end = (4,1)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,2)
------>iter 0: move has x_end, y_end = (5,2)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,2)
------>iter 1: move has x_end, y_end = (4,2)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,3)
------>iter 0: move has x_end, y_end = (5,3)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,3)
------>iter 1: move has x_end, y_end = (4,3)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,4)
------>iter 0: move has x_end, y_end = (5,4)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,4)
------>iter 1: move has x_end, y_end = (4,4)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,5)
------>iter 0: move has x_end, y_end = (5,5)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,5)
------>iter 1: move has x_end, y_end = (4,5)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,6)
------>iter 0: move has x_end, y_end = (5,6)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,6)
------>iter 1: move has x_end, y_end = (4,6)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,7)
------>iter 0: move has x_end, y_end = (5,7)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,7)
------>iter 1: move has x_end, y_end = (4,7)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,0)
------>iter 0: move has x_end, y_end = (5,0)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,0)
------>iter 1: move has x_end, y_end = (4,0)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,1)
------>iter 0: move has x_end, y_end = (5,1)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,1)
------>iter 1: move has x_end, y_end = (4,1)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,2)
------>iter 0: move has x_end, y_end = (5,2)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,2)
------>iter 1: move has x_end, y_end = (4,2)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,3)
------>iter 0: move has x_end, y_end = (5,3)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,3)
------>iter 1: move has x_end, y_end = (4,3)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,4)
------>iter 0: move has x_end, y_end = (5,4)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,4)
------>iter 1: move has x_end, y_end = (4,4)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,5)
------>iter 0: move has x_end, y_end = (5,5)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,5)
------>iter 1: move has x_end, y_end = (4,5)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,6)
------>iter 0: move has x_end, y_end = (5,6)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,6)
------>iter 1: move has x_end, y_end = (4,6)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,7)
------>iter 0: move has x_end, y_end = (5,7)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,7)
------>iter 1: move has x_end, y_end = (4,7)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3422
in pawn set moves black
in x < 6 and y > 0 && y < 7
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (1,2)
------>iter 0: move has x_end, y_end = (2,2)
------>iter 0: Piece to move is of code: 3422
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (1,2)
------>iter 1: move has x_end, y_end = (3,2)
------>iter 1: Piece to move is of code: 3422
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,0)
------>iter 0: move has x_end, y_end = (5,0)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,0)
------>iter 1: move has x_end, y_end = (4,0)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,1)
------>iter 0: move has x_end, y_end = (5,1)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,1)
------>iter 1: move has x_end, y_end = (4,1)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,2)
------>iter 0: move has x_end, y_end = (5,2)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,2)
------>iter 1: move has x_end, y_end = (4,2)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,3)
------>iter 0: move has x_end, y_end = (5,3)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,3)
------>iter 1: move has x_end, y_end = (4,3)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,4)
------>iter 0: move has x_end, y_end = (5,4)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,4)
------>iter 1: move has x_end, y_end = (4,4)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,5)
------>iter 0: move has x_end, y_end = (5,5)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,5)
------>iter 1: move has x_end, y_end = (4,5)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,6)
------>iter 0: move has x_end, y_end = (5,6)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,6)
------>iter 1: move has x_end, y_end = (4,6)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,7)
------>iter 0: move has x_end, y_end = (5,7)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,7)
------>iter 1: move has x_end, y_end = (4,7)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,0)
------>iter 0: move has x_end, y_end = (5,0)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,0)
------>iter 1: move has x_end, y_end = (4,0)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,1)
------>iter 0: move has x_end, y_end = (5,1)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,1)
------>iter 1: move has x_end, y_end = (4,1)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,2)
------>iter 0: move has x_end, y_end = (5,2)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,2)
------>iter 1: move has x_end, y_end = (4,2)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,3)
------>iter 0: move has x_end, y_end = (5,3)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,3)
------>iter 1: move has x_end, y_end = (4,3)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,4)
------>iter 0: move has x_end, y_end = (5,4)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,4)
------>iter 1: move has x_end, y_end = (4,4)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,5)
------>iter 0: move has x_end, y_end = (5,5)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,5)
------>iter 1: move has x_end, y_end = (4,5)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,6)
------>iter 0: move has x_end, y_end = (5,6)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,6)
------>iter 1: move has x_end, y_end = (4,6)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,7)
------>iter 0: move has x_end, y_end = (5,7)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,7)
------>iter 1: move has x_end, y_end = (4,7)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3422
in pawn set moves black
in x < 6 and y > 0 && y < 7
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (1,3)
------>iter 0: move has x_end, y_end = (2,3)
------>iter 0: Piece to move is of code: 3422
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (1,3)
------>iter 1: move has x_end, y_end = (3,3)
------>iter 1: Piece to move is of code: 3422
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,0)
------>iter 0: move has x_end, y_end = (5,0)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,0)
------>iter 1: move has x_end, y_end = (4,0)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,1)
------>iter 0: move has x_end, y_end = (5,1)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,1)
------>iter 1: move has x_end, y_end = (4,1)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,2)
------>iter 0: move has x_end, y_end = (5,2)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,2)
------>iter 1: move has x_end, y_end = (4,2)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,3)
------>iter 0: move has x_end, y_end = (5,3)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,3)
------>iter 1: move has x_end, y_end = (4,3)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,4)
------>iter 0: move has x_end, y_end = (5,4)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,4)
------>iter 1: move has x_end, y_end = (4,4)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,5)
------>iter 0: move has x_end, y_end = (5,5)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,5)
------>iter 1: move has x_end, y_end = (4,5)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,6)
------>iter 0: move has x_end, y_end = (5,6)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,6)
------>iter 1: move has x_end, y_end = (4,6)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,7)
------>iter 0: move has x_end, y_end = (5,7)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,7)
------>iter 1: move has x_end, y_end = (4,7)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,0)
------>iter 0: move has x_end, y_end = (5,0)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,0)
------>iter 1: move has x_end, y_end = (4,0)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,1)
------>iter 0: move has x_end, y_end = (5,1)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,1)
------>iter 1: move has x_end, y_end = (4,1)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,2)
------>iter 0: move has x_end, y_end = (5,2)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,2)
------>iter 1: move has x_end, y_end = (4,2)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,3)
------>iter 0: move has x_end, y_end = (5,3)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,3)
------>iter 1: move has x_end, y_end = (4,3)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,4)
------>iter 0: move has x_end, y_end = (5,4)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,4)
------>iter 1: move has x_end, y_end = (4,4)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,5)
------>iter 0: move has x_end, y_end = (5,5)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,5)
------>iter 1: move has x_end, y_end = (4,5)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,6)
------>iter 0: move has x_end, y_end = (5,6)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,6)
------>iter 1: move has x_end, y_end = (4,6)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,7)
------>iter 0: move has x_end, y_end = (5,7)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,7)
------>iter 1: move has x_end, y_end = (4,7)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3422
in pawn set moves black
in x < 6 and y > 0 && y < 7
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (1,4)
------>iter 0: move has x_end, y_end = (2,4)
------>iter 0: Piece to move is of code: 3422
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (1,4)
------>iter 1: move has x_end, y_end = (3,4)
------>iter 1: Piece to move is of code: 3422
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,0)
------>iter 0: move has x_end, y_end = (5,0)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,0)
------>iter 1: move has x_end, y_end = (4,0)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,1)
------>iter 0: move has x_end, y_end = (5,1)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,1)
------>iter 1: move has x_end, y_end = (4,1)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,2)
------>iter 0: move has x_end, y_end = (5,2)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,2)
------>iter 1: move has x_end, y_end = (4,2)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,3)
------>iter 0: move has x_end, y_end = (5,3)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,3)
------>iter 1: move has x_end, y_end = (4,3)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,4)
------>iter 0: move has x_end, y_end = (5,4)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,4)
------>iter 1: move has x_end, y_end = (4,4)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,5)
------>iter 0: move has x_end, y_end = (5,5)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,5)
------>iter 1: move has x_end, y_end = (4,5)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,6)
------>iter 0: move has x_end, y_end = (5,6)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,6)
------>iter 1: move has x_end, y_end = (4,6)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,7)
------>iter 0: move has x_end, y_end = (5,7)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,7)
------>iter 1: move has x_end, y_end = (4,7)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,0)
------>iter 0: move has x_end, y_end = (5,0)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,0)
------>iter 1: move has x_end, y_end = (4,0)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,1)
------>iter 0: move has x_end, y_end = (5,1)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,1)
------>iter 1: move has x_end, y_end = (4,1)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,2)
------>iter 0: move has x_end, y_end = (5,2)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,2)
------>iter 1: move has x_end, y_end = (4,2)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,3)
------>iter 0: move has x_end, y_end = (5,3)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,3)
------>iter 1: move has x_end, y_end = (4,3)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,4)
------>iter 0: move has x_end, y_end = (5,4)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,4)
------>iter 1: move has x_end, y_end = (4,4)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,5)
------>iter 0: move has x_end, y_end = (5,5)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,5)
------>iter 1: move has x_end, y_end = (4,5)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,6)
------>iter 0: move has x_end, y_end = (5,6)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,6)
------>iter 1: move has x_end, y_end = (4,6)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,7)
------>iter 0: move has x_end, y_end = (5,7)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,7)
------>iter 1: move has x_end, y_end = (4,7)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3422
in pawn set moves black
in x < 6 and y > 0 && y < 7
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (1,5)
------>iter 0: move has x_end, y_end = (2,5)
------>iter 0: Piece to move is of code: 3422
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (1,5)
------>iter 1: move has x_end, y_end = (3,5)
------>iter 1: Piece to move is of code: 3422
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,0)
------>iter 0: move has x_end, y_end = (5,0)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,0)
------>iter 1: move has x_end, y_end = (4,0)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,1)
------>iter 0: move has x_end, y_end = (5,1)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,1)
------>iter 1: move has x_end, y_end = (4,1)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,2)
------>iter 0: move has x_end, y_end = (5,2)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,2)
------>iter 1: move has x_end, y_end = (4,2)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,3)
------>iter 0: move has x_end, y_end = (5,3)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,3)
------>iter 1: move has x_end, y_end = (4,3)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,4)
------>iter 0: move has x_end, y_end = (5,4)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,4)
------>iter 1: move has x_end, y_end = (4,4)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,5)
------>iter 0: move has x_end, y_end = (5,5)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,5)
------>iter 1: move has x_end, y_end = (4,5)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,6)
------>iter 0: move has x_end, y_end = (5,6)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,6)
------>iter 1: move has x_end, y_end = (4,6)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,7)
------>iter 0: move has x_end, y_end = (5,7)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,7)
------>iter 1: move has x_end, y_end = (4,7)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,0)
------>iter 0: move has x_end, y_end = (5,0)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,0)
------>iter 1: move has x_end, y_end = (4,0)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,1)
------>iter 0: move has x_end, y_end = (5,1)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,1)
------>iter 1: move has x_end, y_end = (4,1)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,2)
------>iter 0: move has x_end, y_end = (5,2)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,2)
------>iter 1: move has x_end, y_end = (4,2)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,3)
------>iter 0: move has x_end, y_end = (5,3)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,3)
------>iter 1: move has x_end, y_end = (4,3)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,4)
------>iter 0: move has x_end, y_end = (5,4)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,4)
------>iter 1: move has x_end, y_end = (4,4)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,5)
------>iter 0: move has x_end, y_end = (5,5)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,5)
------>iter 1: move has x_end, y_end = (4,5)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,6)
------>iter 0: move has x_end, y_end = (5,6)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,6)
------>iter 1: move has x_end, y_end = (4,6)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,7)
------>iter 0: move has x_end, y_end = (5,7)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,7)
------>iter 1: move has x_end, y_end = (4,7)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3422
in pawn set moves black
in x < 6 and y > 0 && y < 7
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (1,6)
------>iter 0: move has x_end, y_end = (2,6)
------>iter 0: Piece to move is of code: 3422
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (1,6)
------>iter 1: move has x_end, y_end = (3,6)
------>iter 1: Piece to move is of code: 3422
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,0)
------>iter 0: move has x_end, y_end = (5,0)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,0)
------>iter 1: move has x_end, y_end = (4,0)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,1)
------>iter 0: move has x_end, y_end = (5,1)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,1)
------>iter 1: move has x_end, y_end = (4,1)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,2)
------>iter 0: move has x_end, y_end = (5,2)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,2)
------>iter 1: move has x_end, y_end = (4,2)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,3)
------>iter 0: move has x_end, y_end = (5,3)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,3)
------>iter 1: move has x_end, y_end = (4,3)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,4)
------>iter 0: move has x_end, y_end = (5,4)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,4)
------>iter 1: move has x_end, y_end = (4,4)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,5)
------>iter 0: move has x_end, y_end = (5,5)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,5)
------>iter 1: move has x_end, y_end = (4,5)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,6)
------>iter 0: move has x_end, y_end = (5,6)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,6)
------>iter 1: move has x_end, y_end = (4,6)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,7)
------>iter 0: move has x_end, y_end = (5,7)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,7)
------>iter 1: move has x_end, y_end = (4,7)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,0)
------>iter 0: move has x_end, y_end = (5,0)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,0)
------>iter 1: move has x_end, y_end = (4,0)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,1)
------>iter 0: move has x_end, y_end = (5,1)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,1)
------>iter 1: move has x_end, y_end = (4,1)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,2)
------>iter 0: move has x_end, y_end = (5,2)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,2)
------>iter 1: move has x_end, y_end = (4,2)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,3)
------>iter 0: move has x_end, y_end = (5,3)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,3)
------>iter 1: move has x_end, y_end = (4,3)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,4)
------>iter 0: move has x_end, y_end = (5,4)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,4)
------>iter 1: move has x_end, y_end = (4,4)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,5)
------>iter 0: move has x_end, y_end = (5,5)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,5)
------>iter 1: move has x_end, y_end = (4,5)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,6)
------>iter 0: move has x_end, y_end = (5,6)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,6)
------>iter 1: move has x_end, y_end = (4,6)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,7)
------>iter 0: move has x_end, y_end = (5,7)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,7)
------>iter 1: move has x_end, y_end = (4,7)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3422
in pawn set moves black
entering case (2)
in x<6 and y == 7
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (1,7)
------>iter 0: move has x_end, y_end = (2,7)
------>iter 0: Piece to move is of code: 3422
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (1,7)
------>iter 1: move has x_end, y_end = (3,7)
------>iter 1: Piece to move is of code: 3422
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,0)
------>iter 0: move has x_end, y_end = (5,0)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,0)
------>iter 1: move has x_end, y_end = (4,0)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,1)
------>iter 0: move has x_end, y_end = (5,1)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,1)
------>iter 1: move has x_end, y_end = (4,1)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,2)
------>iter 0: move has x_end, y_end = (5,2)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,2)
------>iter 1: move has x_end, y_end = (4,2)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,3)
------>iter 0: move has x_end, y_end = (5,3)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,3)
------>iter 1: move has x_end, y_end = (4,3)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,4)
------>iter 0: move has x_end, y_end = (5,4)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,4)
------>iter 1: move has x_end, y_end = (4,4)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,5)
------>iter 0: move has x_end, y_end = (5,5)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,5)
------>iter 1: move has x_end, y_end = (4,5)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,6)
------>iter 0: move has x_end, y_end = (5,6)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,6)
------>iter 1: move has x_end, y_end = (4,6)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,7)
------>iter 0: move has x_end, y_end = (5,7)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,7)
------>iter 1: move has x_end, y_end = (4,7)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3422
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,0)
------>iter 0: move has x_end, y_end = (5,0)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,0)
------>iter 1: move has x_end, y_end = (4,0)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,1)
------>iter 0: move has x_end, y_end = (5,1)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,1)
------>iter 1: move has x_end, y_end = (4,1)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,2)
------>iter 0: move has x_end, y_end = (5,2)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,2)
------>iter 1: move has x_end, y_end = (4,2)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,3)
------>iter 0: move has x_end, y_end = (5,3)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,3)
------>iter 1: move has x_end, y_end = (4,3)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,4)
------>iter 0: move has x_end, y_end = (5,4)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,4)
------>iter 1: move has x_end, y_end = (4,4)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,5)
------>iter 0: move has x_end, y_end = (5,5)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,5)
------>iter 1: move has x_end, y_end = (4,5)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,6)
------>iter 0: move has x_end, y_end = (5,6)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,6)
------>iter 1: move has x_end, y_end = (4,6)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3123
in pawn set moves white
in generator: pawn has set moves.
in generator: get_nodes(): entering routine.
in generator: get_nodes(): for loop iter: 0
------>iter 0: node and board initialized in memory
------>iter 0: move has x_start, y_start = (6,7)
------>iter 0: move has x_end, y_end = (5,7)
------>iter 0: Piece to move is of code: 3123
------>iter 0: going into 8x8 double for loop to copy most of position over.
------>iter 0: old position copied over.
------>iter 0: new position made.
in generator: get_nodes(): for loop iter: 1
------>iter 1: node and board initialized in memory
------>iter 1: move has x_start, y_start = (6,7)
------>iter 1: move has x_end, y_end = (4,7)
------>iter 1: Piece to move is of code: 3123
------>iter 1: going into 8x8 double for loop to copy most of position over.
------>iter 1: old position copied over.
------>iter 1: new position made.
in generator: new nodes created.
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 1 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3123
in generator: build_tree(): at depth: 0 / 1
--->with value of3123
in generator: build_tree(): at depth: 0 / 1
--->with value of3123
in generator: build_tree(): at depth: 0 / 1
--->with value of3123
in generator: build_tree(): at depth: 0 / 1
--->with value of3123
in generator: build_tree(): at depth: 0 / 1
--->with value of3123
in generator: build_tree(): at depth: 0 / 1
--->with value of3123
in generator: build_tree(): at depth: 0 / 1
--->with value of3123
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
in generator: build_tree(): at depth: 0 / 1
--->with value of3
